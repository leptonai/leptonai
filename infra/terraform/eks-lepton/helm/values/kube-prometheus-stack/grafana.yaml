# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
grafana:
  enabled: true

  ingress:
    # NOTE: to just use service
    #
    # e.g.,
    # <service-name>.<namespace>.svc.cluster.local:<service-port>
    # http://kube-prometheus-stack-grafana.kube-prometheus-stack.svc.cluster.local:80
    #
    # e.g.,
    # POD=$(kubectl -n kube-prometheus-stack get pod -l app.kubernetes.io/instance=kube-prometheus-stack -l app.kubernetes.io/name=grafana -o jsonpath="{.items[0].metadata.name}")
    # kubectl -n kube-prometheus-stack port-forward $POD 3001:3000
    # http://localhost:3001
    enabled: false
  service:
    port: 3000
    targetPort: 3000

  adminPassword: "${admin_password}"

  # manually create to set up IRSA
  #
  # e.g.,
  # serviceaccounts/kube-prometheus-stack-alertmanager
  # serviceaccounts/kube-prometheus-stack-grafana
  # serviceaccounts/kube-prometheus-stack-kube-state-metrics
  # serviceaccounts/kube-prometheus-stack-operator
  # serviceaccounts/kube-prometheus-stack-prometheus
  # serviceaccounts/kube-prometheus-stack-prometheus-node-exporter
  serviceAccount:
    # use the one created above that maps IRSA for IAM permissions
    create: false
    name: ${kube_prometheus_stack_sa_grafana}

  sidecar:
    datasources:
      enabled: true

      # "Only one datasource per organization can be marked as default"
      defaultDatasourceEnabled: false

  # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana
  grafana.ini:
    auth:
      sigv4_auth_enabled: true

    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#assume_role_enabled
    aws:
      assume_role_enabled: true

    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
    # export GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/tmp/dashboards/k8s-resources-cluster.json
    dashboards:
      default_home_dashboard_path: /tmp/dashboards/k8s-resources-cluster.json

  # use additional data sources to configure aws auth (sig v4)
  additionalDataSources:
    # use "http://kube-prometheus-stack-prometheus.kube-prometheus-stack.svc.cluster.local:9090"
    # as fallback in case of Amazon Managed Prometheus outages

    # default data source
    - name: ${amp_name}
      url: ${amp_url}
      type: prometheus
      isDefault: true
      jsonData:
        httpMethod: POST
        sigV4Auth: true
        sigV4AuthType: default
        sigV4Region: ${amp_region}
        sigV4AssumeRoleArn: ${amp_role_arn}

    - name: ${kubecost_name}
      url: ${kubecost_url}
      type: prometheus
      isDefault: false
