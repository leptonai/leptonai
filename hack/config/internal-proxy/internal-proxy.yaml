# 1. Need install gloo in namespace after apply this config
# k apply -f hack/config/internal-proxy/internal-proxy.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: internal-proxy

---
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: tcp-test-upstream
  namespace: internal-proxy
spec:
  static:
    hosts:
      - addr: 127.0.0.1 # todo: replace it with actual upstream ip
        port: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name:  internal-proxy-group
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:605454121064:certificate/98e54d8a-7dde-450d-abf1-e6dfc6a56905
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
  name: internal-proxy-ingress
  namespace: internal-proxy
spec: 
  ingressClassName: alb
  rules:
  - http:
      paths:
      - backend:
          service:
            name: gateway-proxy
            port:
              number: 80
        path: /
        pathType: Prefix

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-proxy-redirect-ingress
  namespace: internal-proxy
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-path:  /healthz
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: internal-proxy-group
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
        path: /
        pathType: Prefix

---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: internal-proxy-virtual-service
  namespace: internal-proxy
  labels:
    gateway-type: internal-proxy # label used by the Gateway CR
spec:
  virtualHost:
    domains:
    - tcp.test.lepton.ai
    routes:
    # for dashboard
    - matchers:
      - prefix: /
      routeAction:
        single:
          upstream:
            name: tcp-test-upstream
            namespace: internal-proxy

