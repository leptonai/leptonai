name: CI/CD - cluster

on:
  pull_request:
    paths:
      - .github/workflows/cicd-cluster.yaml
      - "infra/terraform/eks-lepton/**"
      - "infra-tests/**"
      - "lepton-mothership/**"
      - "!lepton-mothership/cmd/**"
    branches: [ "**" ]

jobs:
  test:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short HEAD)
        echo "short_sha=$calculatedSha" >> $GITHUB_OUTPUT
        echo "cluster_name=cicluster$calculatedSha" >> $GITHUB_OUTPUT
    - name: Install Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
    - name: Create cluster
      run: |
        cd infra-tests
        pip install -r requirements.txt
        python test_cluster_creation.py ${{ steps.vars.outputs.cluster_name }} ${{ secrets.MOTHERSHIP_TOKEN }} ${{ steps.extract_branch.outputs.branch }} create
    - name: Create workspace
      env:
        IMAGE_TAG: latest
        API_TOKEN: token-${{ steps.vars.outputs.short_sha }}
        NAMESPACE: clusterci${{ steps.vars.outputs.short_sha }}
      run: |
        curl -H "Authorization: Bearer ${{ secrets.MOTHERSHIP_TOKEN }}" \
          -X POST \
          -d '{"cluster_name": "${{ steps.vars.outputs.cluster_name }}", "name": "'$NAMESPACE'", "api_token": "'$API_TOKEN'", "git_ref": "${{ steps.extract_branch.outputs.branch }}", "image_tag": "'$IMAGE_TAG'"}' \
          ${{ vars.MOTHERSHIP_URL }}/workspaces

        # TODO: do the wait in mothership cli
        END=$(date -ud "10 minutes" +%s)
        while (( $(date +%s) < $END )); do
          sleep 10
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.MOTHERSHIP_TOKEN }}" \
            ${{ vars.MOTHERSHIP_URL }}/workspaces/"$NAMESPACE")
          STATE=$(echo $RESPONSE | jq -r '.status.state')
          echo $(date) "workspace state:" $STATE
          if [ "$STATE" = "ready" ]; then
            echo "workspace is ready."
            exit 0
          fi
          if [ "$STATE" = "failed" ]; then
            echo $(date) "workspace creation failed."
            exit 1
          fi
        done

        echo $(date) "workspace creation timeout after 10 minutes."
        exit 1
    - name: Run e2e tests
      env:
          API_TOKEN: token-${{ steps.vars.outputs.short_sha }}
          NAMESPACE: clusterci${{ steps.vars.outputs.short_sha }}
      run: |
        pip install -e ./sdk
        e2e-tests/push-and-deploy.sh $NAMESPACE $API_TOKEN https://$NAMESPACE.cloud.lepton.ai/api/v1
    - name: Delete workspace
      if: always()
      env:
          NAMESPACE: clusterci${{ steps.vars.outputs.short_sha }}
      run: |
        # TODO: check state to make sure the deletion succeeds
        curl -H "Authorization: Bearer ${{ secrets.MOTHERSHIP_TOKEN }}" \
          -X DELETE \
          ${{ vars.MOTHERSHIP_URL }}/workspaces/$NAMESPACE
    - name: Delete cluster
      if: always()
      run: |
        cd infra-tests
        pip install -r requirements.txt
        python test_cluster_creation.py ${{ steps.vars.outputs.cluster_name }} ${{ secrets.MOTHERSHIP_TOKEN }} ${{ steps.extract_branch.outputs.branch }} delete
