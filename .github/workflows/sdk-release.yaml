name: sdk-release

on:
  push:
    branches: [ "main" ]
  pull_request:
    paths:
      - .github/workflows/sdk-release.yaml
    branches: [ "**" ]

jobs:

  build-package:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python Environment
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Set up pip
      run: |
        pip install -U pip setuptools
    - name: Build Package
      id: build-package
      run: |
        cd sdk
        pip wheel --no-deps .
        cd -
    - name: Upload to Github Artifact
      uses: actions/upload-artifact@v3
      with:
        name: sdk-package
        path: sdk/leptonai*.whl

  test-package:
    needs: build-package
    runs-on: self-hosted
    strategy:
      matrix:
        python_version: ["3.7", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python Environment
      uses: actions/setup-python@v3
      with:
        python-version: "${{ matrix.python_version }}"
    - name: Set up pip
      run: |
        pip install -U pip setuptools
    - uses: actions/download-artifact@v3
      with:
        name: sdk-package
    - name: Install Package
      run: |
        pip install leptonai*.whl
        pip install pytest pytest-cov responses flask gradio
    - name: Run Tests
      run: |
        echo "leptonai package version:"
        lep -v

        echo "leptonai package path:"
        python -c "import leptonai; print(leptonai)"

        echo "Run unittests"
        pytest sdk

  upload-package:
    needs: test-package
    runs-on: self-hosted
    steps:
    - name: Set up Python Environment
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Set up pip
      run: |
        pip install -U pip setuptools
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Install awscli
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - name: Login to AWS CodeArtifact (twine)
      env:
        AWS_CODE_ARTIFACT_REPO: lepton-dev
        AWS_CODE_ARTIFACT_DOMAIN: lepton-dev
        AWS_CODE_ARTIFACT_REGION: ${{ vars.AWS_REGION }}
        AWS_CODE_ARTIFACT_DOMAIN_OWNER: ${{ secrets.AWS_CODE_ARTIFACT_DOMAIN_OWNER }}
      run: |
        pip install twine
        aws codeartifact login --tool twine --repository ${AWS_CODE_ARTIFACT_REPO} --domain ${AWS_CODE_ARTIFACT_DOMAIN} --domain-owner ${AWS_CODE_ARTIFACT_DOMAIN_OWNER} --region ${AWS_CODE_ARTIFACT_REGION}
    - uses: actions/download-artifact@v3
      with:
        name: sdk-package
    - name: Upload Package
      run: |
        twine upload --verbose --repository codeartifact leptonai*.whl
