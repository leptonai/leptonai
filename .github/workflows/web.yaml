name: web

on:
  push:
    paths:
      - .github/workflows/web.yaml
      - web/**
    branches: ["main"]
  pull_request:
    paths:
      - .github/workflows/web.yaml
      - web/**
    branches: ["**"]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "web/pnpm-lock.yaml"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "web/pnpm-lock.yaml"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

      - name: Lint
        working-directory: web
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "web/pnpm-lock.yaml"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

      - name: Run test task
        working-directory: web
        run: pnpm test
  dashboard-e2e-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "web/pnpm-lock.yaml"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

      - name: Download cypress binary
        working-directory: web/packages/dashboard
        run: pnpm cypress:install
      - name: Run build task
        working-directory: web/packages/dashboard
        run: pnpm build
      - name: Start server
        working-directory: web/packages/dashboard
        run: pnpm preview &
        env:
          CI: true
      - name: Run e2e tests
        working-directory: web/packages/dashboard
        run: npx percy exec -- pnpm test:e2e
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          CI_WORKSPACE_TOKEN: ${{ secrets.CI_WORKSPACE_TOKEN }}
