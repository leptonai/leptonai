name: Test/release machine-rs

# ref. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
on:
  push:
    paths:
      - machine-rs/**
    branches: ["main"]
  pull_request:
    paths:
      - machine-rs/**
    branches: ["**"]

# requires to upload release binaries
# permissions:
#   contents: write

jobs:
  release:
    name: Release ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          # https://doc.rust-lang.org/nightly/rustc/platform-support.html
          - os: ubuntu-20.04
            platform: linux
            target: x86_64-unknown-linux-gnu

          # https://github.com/sharkdp/fd/blob/master/.github/workflows/CICD.yml
          #
          # may require manual builds without cross-linker for linux
          # https://users.rust-lang.org/t/cant-cross-compile-project-with-openssl/70922
          # - os: ubuntu-20.04
          #   platform: linux
          #   target: aarch64-unknown-linux-gnu
          #   use-cross: true

          - os: macos-latest
            platform: darwin
            target: x86_64-apple-darwin

          - os: macos-latest
            platform: darwin
            target: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # https://github.com/sharkdp/fd/blob/master/.github/workflows/CICD.yml
      # https://github.com/cross-rs/cross/wiki/Recipes#openssl
      - name: Install OS dependencies
        shell: bash
        run: |
          case ${{ matrix.job.target }} in
            arm-unknown-linux-*) sudo apt-get -y update ; sudo apt-get -y install gcc-arm-linux-gnueabihf ;;
            aarch64-unknown-linux-gnu) sudo apt-get -y update ; sudo apt-get -y install gcc-aarch64-linux-gnu ;;
          esac

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true

      - name: Show version information (Rust, cargo, GCC)
        shell: bash
        run: |
          gcc --version || true
          rustup -V
          rustup toolchain list
          rustup default
          cargo -V
          rustc -V

      - name: Set cargo cmd
        shell: bash
        run: echo "CARGO_CMD=cargo" >> $GITHUB_ENV

      - name: Set cargo cmd to cross
        shell: bash
        if: ${{ matrix.job.use-cross == true }}
        run: echo "CARGO_CMD=cross" >> $GITHUB_ENV

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.job.os }}-${{ matrix.job.target }}

      - name: Install cross
        if: ${{ matrix.job.use-cross == true }}
        working-directory: machine-rs
        run: cargo install cross

      - name: Build
        working-directory: machine-rs
        run: ${{ env.CARGO_CMD }} build --release --target=${{ matrix.job.target }} --bin machine-rs

      # TODO: enable this when we need automated release
      #
      # - name: Compress binaries
      #   id: release_artifacts
      #   env:
      #     PLATFORM_NAME: ${{ matrix.job.platform }}
      #     TARGET: ${{ matrix.job.target }}
      #   shell: bash
      #   working-directory: machine-rs
      #   run: |
      #     if [ "$PLATFORM_NAME" == "linux" ]; then

      #       cp ./target/${TARGET}/release/machine-rs machine-rs.${TARGET}
      #       echo "file_name_machine_rs=machine-rs.${TARGET}" >> $GITHUB_OUTPUT
      #       tar -czvf machine-rs.${TARGET}.tar.gz -C ./target/${TARGET}/release machine-rs
      #       echo "file_name_machine_rs_tar_gz=machine-rs.${TARGET}.tar.gz" >> $GITHUB_OUTPUT

      #     elif [ "$PLATFORM_NAME" == "darwin" ]; then

      #       cp ./target/${TARGET}/release/machine-rs machine-rs.${TARGET}
      #       echo "file_name_machine_rs=machine-rs.${TARGET}" >> $GITHUB_OUTPUT
      #       gtar -czvf machine-rs.${TARGET}.tar.gz -C ./target/${TARGET}/release machine-rs
      #       echo "file_name_machine_rs_tar_gz=machine-rs.${TARGET}.tar.gz" >> $GITHUB_OUTPUT

      #     else

      #       echo "skipping $PLATFORM_NAME"

      #     fi

      # release tip from latest commits
      # https://github.com/softprops/action-gh-release
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      # - name: Release latest
      #   uses: softprops/action-gh-release@v1
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   with:
      #     name: Latest release
      #     tag_name: latest
      #     prerelease: true
      #     body: Latest builds from the last commit.
      #     files: |
      #       ${{ steps.release_artifacts.outputs.file_name_machine_rs }}
      #       ${{ steps.release_artifacts.outputs.file_name_machine_rs_tar_gz }}

      # release only for tags
      # https://github.com/softprops/action-gh-release
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      # - name: Release tag
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     name: ${{ github.ref_name }}
      #     tag_name: ${{ github.ref_name }}
      #     draft: true
      #     prerelease: true
      #     body: Release builds for ${{ github.ref_name }}.
      #     files: |
      #       ${{ steps.release_artifacts.outputs.file_name_machine_rs }}
      #       ${{ steps.release_artifacts.outputs.file_name_machine_rs_tar_gz }}
