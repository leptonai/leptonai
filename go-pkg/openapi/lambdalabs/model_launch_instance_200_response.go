/*
Lambda Cloud API

API for interacting with the Lambda GPU Cloud

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lambdalabs

import (
	"encoding/json"
)

// checks if the LaunchInstance200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LaunchInstance200Response{}

// LaunchInstance200Response struct for LaunchInstance200Response
type LaunchInstance200Response struct {
	Data LaunchInstance200ResponseData `json:"data"`
}

// NewLaunchInstance200Response instantiates a new LaunchInstance200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchInstance200Response(data LaunchInstance200ResponseData) *LaunchInstance200Response {
	this := LaunchInstance200Response{}
	this.Data = data
	return &this
}

// NewLaunchInstance200ResponseWithDefaults instantiates a new LaunchInstance200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchInstance200ResponseWithDefaults() *LaunchInstance200Response {
	this := LaunchInstance200Response{}
	return &this
}

// GetData returns the Data field value
func (o *LaunchInstance200Response) GetData() LaunchInstance200ResponseData {
	if o == nil {
		var ret LaunchInstance200ResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *LaunchInstance200Response) GetDataOk() (*LaunchInstance200ResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *LaunchInstance200Response) SetData(v LaunchInstance200ResponseData) {
	o.Data = v
}

func (o LaunchInstance200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LaunchInstance200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableLaunchInstance200Response struct {
	value *LaunchInstance200Response
	isSet bool
}

func (v NullableLaunchInstance200Response) Get() *LaunchInstance200Response {
	return v.value
}

func (v *NullableLaunchInstance200Response) Set(val *LaunchInstance200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchInstance200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchInstance200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchInstance200Response(val *LaunchInstance200Response) *NullableLaunchInstance200Response {
	return &NullableLaunchInstance200Response{value: val, isSet: true}
}

func (v NullableLaunchInstance200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchInstance200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


