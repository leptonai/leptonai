/*
Lambda Cloud API

API for interacting with the Lambda GPU Cloud

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lambdalabs

import (
	"encoding/json"
)

// checks if the RestartInstance200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestartInstance200ResponseData{}

// RestartInstance200ResponseData struct for RestartInstance200ResponseData
type RestartInstance200ResponseData struct {
	// List of instances that were restarted. Note: this list might not contain all instances requested to be restarted.
	RestartedInstances []Instance `json:"restarted_instances"`
}

// NewRestartInstance200ResponseData instantiates a new RestartInstance200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestartInstance200ResponseData(restartedInstances []Instance) *RestartInstance200ResponseData {
	this := RestartInstance200ResponseData{}
	this.RestartedInstances = restartedInstances
	return &this
}

// NewRestartInstance200ResponseDataWithDefaults instantiates a new RestartInstance200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestartInstance200ResponseDataWithDefaults() *RestartInstance200ResponseData {
	this := RestartInstance200ResponseData{}
	return &this
}

// GetRestartedInstances returns the RestartedInstances field value
func (o *RestartInstance200ResponseData) GetRestartedInstances() []Instance {
	if o == nil {
		var ret []Instance
		return ret
	}

	return o.RestartedInstances
}

// GetRestartedInstancesOk returns a tuple with the RestartedInstances field value
// and a boolean to check if the value has been set.
func (o *RestartInstance200ResponseData) GetRestartedInstancesOk() ([]Instance, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestartedInstances, true
}

// SetRestartedInstances sets field value
func (o *RestartInstance200ResponseData) SetRestartedInstances(v []Instance) {
	o.RestartedInstances = v
}

func (o RestartInstance200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestartInstance200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["restarted_instances"] = o.RestartedInstances
	return toSerialize, nil
}

type NullableRestartInstance200ResponseData struct {
	value *RestartInstance200ResponseData
	isSet bool
}

func (v NullableRestartInstance200ResponseData) Get() *RestartInstance200ResponseData {
	return v.value
}

func (v *NullableRestartInstance200ResponseData) Set(val *RestartInstance200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableRestartInstance200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableRestartInstance200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestartInstance200ResponseData(val *RestartInstance200ResponseData) *NullableRestartInstance200ResponseData {
	return &NullableRestartInstance200ResponseData{value: val, isSet: true}
}

func (v NullableRestartInstance200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestartInstance200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


