/*
Lambda Cloud API

API for interacting with the Lambda GPU Cloud

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lambdalabs

import (
	"encoding/json"
)

// checks if the ModelError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelError{}

// ModelError struct for ModelError
type ModelError struct {
	Code ErrorCode `json:"code"`
	// Detailed description of the error
	Message string `json:"message"`
	// Suggestion of possible ways to fix the error.
	Suggestion NullableString `json:"suggestion,omitempty"`
}

// NewModelError instantiates a new ModelError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelError(code ErrorCode, message string) *ModelError {
	this := ModelError{}
	this.Code = code
	this.Message = message
	return &this
}

// NewModelErrorWithDefaults instantiates a new ModelError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelErrorWithDefaults() *ModelError {
	this := ModelError{}
	return &this
}

// GetCode returns the Code field value
func (o *ModelError) GetCode() ErrorCode {
	if o == nil {
		var ret ErrorCode
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ModelError) GetCodeOk() (*ErrorCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ModelError) SetCode(v ErrorCode) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *ModelError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ModelError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ModelError) SetMessage(v string) {
	o.Message = v
}

// GetSuggestion returns the Suggestion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelError) GetSuggestion() string {
	if o == nil || IsNil(o.Suggestion.Get()) {
		var ret string
		return ret
	}
	return *o.Suggestion.Get()
}

// GetSuggestionOk returns a tuple with the Suggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelError) GetSuggestionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suggestion.Get(), o.Suggestion.IsSet()
}

// HasSuggestion returns a boolean if a field has been set.
func (o *ModelError) HasSuggestion() bool {
	if o != nil && o.Suggestion.IsSet() {
		return true
	}

	return false
}

// SetSuggestion gets a reference to the given NullableString and assigns it to the Suggestion field.
func (o *ModelError) SetSuggestion(v string) {
	o.Suggestion.Set(&v)
}
// SetSuggestionNil sets the value for Suggestion to be an explicit nil
func (o *ModelError) SetSuggestionNil() {
	o.Suggestion.Set(nil)
}

// UnsetSuggestion ensures that no value is present for Suggestion, not even an explicit nil
func (o *ModelError) UnsetSuggestion() {
	o.Suggestion.Unset()
}

func (o ModelError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["message"] = o.Message
	if o.Suggestion.IsSet() {
		toSerialize["suggestion"] = o.Suggestion.Get()
	}
	return toSerialize, nil
}

type NullableModelError struct {
	value *ModelError
	isSet bool
}

func (v NullableModelError) Get() *ModelError {
	return v.value
}

func (v *NullableModelError) Set(val *ModelError) {
	v.value = val
	v.isSet = true
}

func (v NullableModelError) IsSet() bool {
	return v.isSet
}

func (v *NullableModelError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelError(val *ModelError) *NullableModelError {
	return &NullableModelError{value: val, isSet: true}
}

func (v NullableModelError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


