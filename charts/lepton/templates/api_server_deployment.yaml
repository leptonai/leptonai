{{ if .Values.apiServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apiServer.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.apiServer.name }}
spec:
  replicas: {{ .Values.apiServer.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.apiServer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.apiServer.name }}
    spec:
      serviceAccountName: {{ .Values.apiServer.name }}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      {{ if .Values.apiServer.efsID }}
      volumes:
        - name: default-efs
          persistentVolumeClaim:
            claimName: {{ .Release.Namespace }}-efs-default-pvc
      {{ end }}
      containers:
        - name: {{ .Values.apiServer.name }}
          image: {{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag }}
          imagePullPolicy: {{ .Values.apiServer.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: {{ .Values.apiServer.service.resources.requests.memory }}
              cpu: {{ .Values.apiServer.service.resources.requests.cpu }}
            limits:
              memory: {{ .Values.apiServer.service.resources.limits.memory }}
              cpu: {{ .Values.apiServer.service.resources.limits.cpu }}
          {{ if .Values.apiServer.efsID }}
          volumeMounts:
            - name: default-efs
              mountPath: /mnt/efs/default
          {{ end }}
          command: [ "/app/{{ .Values.apiServer.name }}" ]
          args:
            - "--cluster-name"
            - "{{ .Values.clusterName }}"
            - "--namespace"
            - {{ .Release.Namespace | quote }}
            - "--service-account-name"
            - "{{ .Values.apiServer.name }}-deployment"
            - "--bucket-name"
            - "{{ .Values.apiServer.bucketName }}"
            - "--efs-id"
            - "{{ .Values.apiServer.efsID }}"
            - "--certificate-arn"
            - "{{ .Values.apiServer.certificateArn }}"
            - "--root-domain"
            - "{{ .Values.apiServer.rootDomain }}"
            - "--api-token"
            - "{{ .Values.apiServer.apiToken }}"
            - "--photon-prefix"
            - "{{ .Values.apiServer.photonPrefix }}"
            - "--workspace-name"
            - "{{ .Values.apiServer.workspaceName }}"
            - "--dynamodb-name"
            - "{{ .Values.apiServer.dynamodbName }}"
            - "--enable-tuna={{ .Values.apiServer.enableTuna }}"
            - "--storage-mount-path"
            - "{{ .Values.apiServer.storageMountPath }}"
            - "--enable-storage={{ .Values.apiServer.enableStorage }}"
          ports:
            - containerPort: {{ .Values.apiServer.service.port }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.apiServer.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.apiServer.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
{{ end }}
